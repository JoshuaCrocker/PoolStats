<?php
/**
 * Created by PhpStorm.
 * User: joshuacrocker
 * Date: 10/02/2018
 * Time: 17:05
 */

namespace App\Support\Database;

use Illuminate\Database\Query\Builder as QueryBuilder;
use Illuminate\Support\Facades\Cache;

class Builder extends QueryBuilder
{
    /**
     * Clear cache when inserting or updating - results may have changed
     *
     * @param array $attributes
     * @param array $values
     * @return bool
     */
    public function updateOrInsert(array $attributes, array $values = [])
    {
        Cache::store('request')->flush();

        return parent::updateOrInsert($attributes, $values); // TODO: Change the autogenerated stub
    }

    /**
     * Clear cache when deleting - results may have changed
     *
     * @param null $id
     * @return int
     */
    public function delete($id = null)
    {
        Cache::store('request')->flush();

        return parent::delete($id); // TODO: Change the autogenerated stub
    }

    /**
     * Run the query as a "select" statement against the connection.
     *
     * @return array
     */
    protected function runSelect()
    {
        return Cache::store('request')->remember($this->getCacheKey(), 1, function () {
            return parent::runSelect();
        });
    }

    /**
     * Returns a Unique String that can identify this Query.
     *
     * @return string
     */
    protected function getCacheKey()
    {
        return json_encode([
            $this->toSql() => $this->getBindings()
        ]);
    }
}